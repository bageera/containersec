
version: '3.4'
services:
  mongodb:
    image: mongo:latest
    container_name: mongodb
    networks:
      - traefik_proxy
    volumes:
      - '${USERDIR}/mongo:/config'
      - '${USERDIR}/mongo/mongo_data:/data/db'
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    command:
      - "--auth"
    restart: unless-stopped

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    ports:
      - 8081:8081/tcp
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongodb
      #- ME_CONFIG_MONGODB_ENABLE_ADMIN=true
      #- ME_CONFIG_MONGODB_ADMINUSERNAME=root
      #- ME_CONFIG_MONGODB_ADMINPASSWORD=pass12345
      - ME_CONFIG_MONGODB_AUTH_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - ME_CONFIG_MONGODB_AUTH_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
      - ME_CONFIG_BASICAUTH_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - ME_CONFIG_BASICAUTH_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    volumes:
      - ${USERDIR}/mongo/mongo_data:/data/db
    networks:
      - traefik_proxy
    links:
      - mongodb:mongodb
    labels:
      - "traefik.enable=true"
      - "traefik.backend=me"
      - "traefik.port=8081"
      - "traefik.tcp.routers.mongo-express.entrypoints=mongo"
      - "traefik.http.routers.mongo-express.rule=Host(`me.${DOMAIN}`)"
      - "traefik.tcp.services.mongo-express.loadbalancer.server.port=8081"

  elastichq:
    image: elastichq/elasticsearch-hq
    container_name: elastichq
    networks:
      - traefik_proxy
    labels:
      - "traefik.enable=true"
      - "traefik.backend=elastichq"
      - "traefik.port=5000"
      - "traefik.http.routers.elastichq.entrypoints=web"
      - "traefik.http.routers.elastichq.rule=Host(`elastichq.${DOMAIN}`)"
      - "traefik.http.services.elastichq.loadbalancer.server.port=5000"


  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.9
    container_name: elasticsearch
    dns:
      - 192.168.15.75
    networks:
      - traefik_proxy    
    environment:
      # old settings
      - http.host=0.0.0.0
      - transport.host=localhost
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - cluster.name=panther-cluster
      - discovery.type=single-node
      - node.name=es01
      #- bootstrap.memory_lock=true
      #- "bootstrap.password=false"
      #- "xpack.security.enabled=false"
      #- "ingest.geoip.downloader.enabled=false"
      #- xpack.license.self_generated.type=trial
      # - ES_SETTING_BOOTSTRAP_MEMORY__LOCK=true
      - KEYSTORE_PASSWORD=jsohan566
      - ELASTIC_PASSWORD_FILE=/usr/share/elasticsearch/config/bootstrapPassword.txt

    ulimits:
      memlock:
        soft: -1
        hard: -1

    volumes:
      - "esnewdata_nas:/usr/share/elasticsearch/data"
      - "${USERDIR}/es/plugins:/usr/share/elasticsearch/plugins"
      - "${USERDIR}/es/logs:/usr/share/elasticsearch/logs"
      - "${USERDIR}/es/config:/usr/share/elasticsearch/config"
    restart: unless-stopped
    logging:
            driver: "gelf"
            options:
                gelf-address: "udp://${IP_ADDRESS}:12201"

  rundeck:
    image: rundeck/rundeck:3.2.8
    container_name: rundeck
    dns:
      - 9.9.9.9
    networks:
      - traefik_proxy
    links:
      - mysql
    environment:
      - "RUNDECK_ADMIN_PASSWORD='jsohan566'"
      - "RUNDECK_SERVER_FORWARDED=true"
      - "RUNDECK_GRAILS_URL=http://rundeck.panther.local"
      - "EXTERNAL_SERVER_URL=http://rundeck.panther.local"
      - "RUNDECK_UID=${PUID}"
      - "RUNDECK_GID=${PGID}"
      - "RUNDECK_JAAS_MODULES_1=PropertyFileLoginModule"
      - "RUNDECK_DATABASE_DRIVER=com.mysql.jdbc.Driver"
      - "RUNDECK_DATABASE_USERNAME=rundeck"
      - "RUNDECK_DATABASE_PASSWORD=rundeck"
      - "RUNDECK_DATABASE_URL=jdbc:mysql://mysql/rundeck?autoReconnect=true&useSSL=false"

    volumes:
      #- '${USERDIR}/rundeck/etc:/home/rundeck/etc'
      - '${USERDIR}/rundeck/config:/home/rundeck/server/config'
      - '${USERDIR}/rundeck/data:/home/rundeck/server/data'
      - '/home/bageera/.ssh:/home/rundeck/.ssh'
    labels:
      - "traefik.enable=true"
      - "traefik.backend=rundeck"
      - "traefik.port=4440"
      - "traefik.http.routers.rundeck.entrypoints=web"
      - "traefik.http.routers.rundeck.rule=Host(`rundeck.${DOMAIN}`)"
      - "traefik.http.services.rundeck.loadbalancer.server.port=4440"
    restart: unless-stopped
    logging:
            driver: "gelf"
            options:
                gelf-address: "udp://${IP_ADDRESS}:12201"

  mysql:
    image: mysql:5.7
    container_name: mysql
    networks:
      - ${CONTAINER_NETWORK}
    expose:
      - 3306
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=rundeck
      - MYSQL_USER=rundeck
      - MYSQL_PASSWORD=rundeck
    volumes:
      - dbdata:/var/lib/mysql
    restart: unless-stopped
    logging:
            driver: "gelf"
            options:
                gelf-address: "udp://${IP_ADDRESS}:12201"

  unms:
    image: nico640/docker-unms:latest
    container_name: unms
    restart: unless-stopped
    networks:
      - ${CONTAINER_NETWORK}
    environment: 
      - TZ=${TZ}
        #- PUID=${PUID}
        #- PGID=${PGID}
      - PUBLIC_HTTPS_PORT=443
    volumes:
      - '${USERDIR}/unms:/config'
    labels:
      - "traefik.enable=true"
      - "traefik.backend=unms"
      - "traefik.port=443"
      - "traefik.http.routers.unms.entrypoints=web"
      - "traefik.http.routers.unms.rule=Host(`unms.${DOMAIN}`)"
      - "traefik.http.services.unms.loadbalancer.server.port=80"
      # - "traefik.http.routers.unms-secure.rule=Host(`unms.${DOMAIN}`)"
      # - "traefik.http.routers.unms-secure.tls=true"
      - "traefik.tcp.routers.unms.entrypoints=web-secure"
      - "traefik.tcp.routers.unms.rule=HostSNI(`unms.panther.local`)"
      - "traefik.tcp.routers.unms.tls=true"
      - "traefik.tcp.routers.unms.tls.passthrough=true"
      - "traefik.tcp.routers.unms.service=unms"
      - "traefik.tcp.services.unms.loadbalancer.server.port=443"
      - "traefik.udp.routers.netflow.entrypoints=netflow"
      - "traefik.udp.routers.netflow.service=netflow"
      - "traefik.udp.services.netflow.loadbalancer.server.port=2055"

      

  unifi-controller:
    image: ghcr.io/linuxserver/unifi-controller:latest
    container_name: unifi-controller
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - MEM_LIMIT=1024 #optional
      - MEM_STARTUP=1024 #optional
    volumes:
      - ${USERDIR}/unifi:/config
    ports:
      - 3478:3478/udp
      - 10001:10001/udp
      - 8080:8080
      #- 8443:8443
      - 1900:1900/udp #optional
      - 8843:8843 #optional
      - 8880:8880 #optional
      - 6789:6789 #optional
      - 5514:5514 #optional
      - 161:161 
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.backend=unifi"
      - "traefik.port=8443"
      #- "traefik.http.routers.unms-secure.rule=Host(`unms.${DOMAIN}`)"
      #- "traefik.http.routers.unms-secure.tls=true"
      - "traefik.http.routers.unifi.entrypoints=web"
      - "traefik.http.routers.unifi.rule=Host(`unifi.${DOMAIN}`)"
      - "traefik.http.services.unifi.loadbalancer.server.port=8080"
      - "traefik.tcp.routers.unifi.entrypoints=web-secure"
      - "traefik.tcp.routers.unifi.rule=HostSNI(`unifi.panther.local`)"
      - "traefik.tcp.routers.unifi.tls=true"
      - "traefik.tcp.routers.unifi.tls.passthrough=true"
      - "traefik.tcp.routers.unifi.service=unifi"
      - "traefik.tcp.services.unifi.loadbalancer.server.port=8443"
      # - "traefik.udp.routers.discovery.entrypoints=discovery"
      - "traefik.udp.routers.discovery.service=discovery"
      - "traefik.udp.services.discovery.loadbalancer.server.port=1900"

  opensearch: # This is also the hostname of the container within the Docker network (i.e. https://opensearch-node1/)
    image: opensearchproject/opensearch:latest # Specifying the latest available image - modify if you want a specific version
    container_name: opensearch
    security_opt:
      - seccomp:unconfined
      - apparmor:unconfined
    environment:
      - cluster.name=opensearch-cluster # Name the cluster
      - node.name=opensearch-node1 # Name the node that will run in this container
      - discovery.seed_hosts=opensearch-node1,opensearch-node2 # Nodes to look for when discovering the cluster
      - cluster.initial_cluster_manager_nodes=opensearch-node1,opensearch-node2 # Nodes eligible to serve as cluster manager
      - bootstrap.memory_lock=true # Disable JVM heap memory swapping
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m" # Set min and max JVM heap sizes to at least 50% of system RAM
      - "DISABLE_SECURITY_PLUGIN=true" # Disables Security plugin
      - "DISABLE_INSTALL_DEMO_CONFIG=true"
    ulimits:
      memlock:
        soft: -1 # Set memlock to unlimited (no soft or hard limit)
        hard: -1
      nofile:
        soft: 65536 # Maximum number of open files for the opensearch user - set to at least 65536
        hard: 65536
    volumes:
      - opensearch_nas:/usr/share/opensearch/data:rw # Creates volume called opensearch-data1 and mounts it to the container
      - "${USERDIR}/opensearch/config/opensearch.yml:/usr/share/opensearch/config/opensearch.yml"
      - "./certs:/usr/share/opensearch/config/certificates:ro"
    # ports:
    #   - 9200:9200 # REST API
    #   - 9600:9600 # Performance Analyzer
    networks:
      - traefik_proxy  # All of the containers will join the same Docker bridge network

  graylog:
    image: graylog/graylog:5.2.2
    container_name: graylog
    volumes:
      - 'graylog_nas:/usr/share/graylog/data'
      - '${USERDIR}/graylog/plugin:/graytemp'
      - '${USERDIR}/graylog/etc:/etc/graylog'
    networks:
      - traefik_proxy
    environment:
      # CHANGE ME (must be at least 16 characters)!
      # Generate one by using for example: pwgen -N 1 -s 96
      - GRAYLOG_PASSWORD_SECRET=${GRAYLOG_PASS}
      # Password: admin
      - GRAYLOG_ROOT_PASSWORD_SHA2=${GRAYLOG_ROOT_SHA}
      - GRAYLOG_HTTP_EXTERNAL_URI=http://graylog.${DOMAIN}/
      - 'GRAYLOG_MONGODB_URI=mongodb://${GRAYLOG_USER}:${GRAYLOG_PASS}@mongodb/${GRAYLOG_DB}'
    links:
      - mongodb:mongodb
      - elasticsearch
      - opensearch
      
    depends_on:
      - mongodb
      - elasticsearch
      
    ports:
      # Graylog web interface and REST API
      - 9999:9000
      # Syslog TCP
      - 1514:1514
      # Syslog UDP
      #- 1514:1514/udp
      # GELF TCP
      - 12201:12201
      # GELF UDP
      #- 12201:12201/udp
      # GELF SNMP
      - 1161:1161/udp
      # NETFLOW
      #- 2055:2055/udp
    labels:
      - "traefik.enable=true"
      - "traefik.backend=graylog"
      - "traefik.port=9000"
      #- "traefik.docker.network=traefik_proxy"
      - "traefik.http.routers.graylog.entrypoints=web"
      - "traefik.http.routers.graylog.rule=Host(`graylog.${DOMAIN}`)"
      - "traefik.http.middlewares.graylog-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.graylog.middlewares=graylog-https-redirect"
      - "traefik.http.routers.graylog-secure.entrypoints=web-secure"
      - "traefik.http.routers.graylog-secure.rule=Host(`graylog.${DOMAINNAME}`) || Host(`graylog.${DOMAIN}`)"
      - "traefik.http.routers.graylog-secure.tls=true"
      - "traefik.http.routers.graylog-secure.tls.certresolver=http"
      - "traefik.http.routers.graylog-secure.service=graylog"
      - "traefik.http.services.graylog.loadbalancer.server.port=9000"
      - "traefik.udp.routers.syslog.entrypoints=syslog"
      - "traefik.udp.routers.syslog.service=syslog"
      - "traefik.udp.services.syslog.loadbalancer.server.port=1514"
      - "traefik.udp.routers.gelf.entrypoints=gelf"
      - "traefik.udp.routers.gelf.service=gelf"
      - "traefik.udp.services.gelf.loadbalancer.server.port=12201"
      - "traefik.udp.routers.netflow.entrypoints=netflow"
      - "traefik.udp.routers.netflow.service=netflow"
      - "traefik.udp.services.netflow.loadbalancer.server.port=2055"

    restart: unless-stopped
    logging:
            driver: "gelf"
            options:
                gelf-address: "udp://${IP_ADDRESS}:12201"

  wireguard:
    container_name: wg-manager
    image: perara/wg-manager
    restart: always
    network_mode: 'host' 
    # networks:
    #   - traefik_proxy
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
      - NET_RAW
    privileged: true
    security_opt:
      - seccomp:unconfined
      - apparmor:unconfined
    # ports:
    #   #  - 51800-51900:51800-51900/udp
    #    - '${IP_ADDRESS}:15919:15919/udp'
    #    - 8888:8888
    volumes:
      - ./wg-manager:/config
      - ./wg-manager:/etc/wireguard
      - /lib/modules:/lib/modules
    # sysctls:
    #   - net.ipv4.conf.all.src_valid_mark=1
    #   - net.ipv4.ip_forward=1
    environment:
      HOST: 0.0.0.0
      PORT: 8888
      ADMIN_USERNAME: admin
      ADMIN_PASSWORD: admin
      WEB_CONCURRENCY: 1
      SERVER_INIT_INTERFACE_START: 1
      SERVER: 1
      SERVER_INIT_INTERFACE: '{"address":"10.0.200.1","subnet":24,"interface":"wg0","listen_port":"15919","endpoint":"server","dns":"10.0.200.1,192.168.15.75","private_key":"","public_key":"","post_up":"","post_down":"","configuration":"","is_running":false,"peers":[]}'
      SERVER_STARTUP_API_KEY: thisisasecretkeythatnobodyknows
    labels:
      - "traefik.enable=true"
      - "traefik.backend=wg"
      - "traefik.port=8888"
      - "traefik.http.routers.wg.entrypoints=web"
      - "traefik.http.routers.wg.rule=Host(`wg.${DOMAIN}`)"
      - "traefik.http.services.wg.loadbalancer.server.port=8888"


networks:
  traefik_proxy:
    external:
      name: traefik_proxy
  default:
    driver: bridge


volumes:
  graylog_nas:
    driver: local
    driver_opts:
      type: nfs
      o: addr=192.168.15.77,nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2,rw
      device: ":/volume2/graylog"
  mongo_data:
    driver: local
  dbdata:
    driver: local
  esnewdata_nas:
    driver: local
    driver_opts:
        type: nfs
        o: addr=192.168.15.77,nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2,rw
        device: ":/volume2/esdata"
  opensearch_nas:
    driver: local
    driver_opts:
        type: nfs
        o: addr=alphanas.panther.local,nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2,rw
        device: ":/volume1/opensearch/data"

